jar {
    enabled = false
}

bootJar {
	enabled = true
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// micrometer
	implementation "io.micrometer:micrometer-core:1.12.3"
	implementation "io.micrometer:micrometer-tracing:1.2.3"

	// json web token
	implementation "io.jsonwebtoken:jjwt-api:${jsonWebTokenVersion}"
	implementation "io.jsonwebtoken:jjwt-impl:${jsonWebTokenVersion}"
	implementation "io.jsonwebtoken:jjwt-jackson:${jsonWebTokenVersion}"

	// docker-compose
	implementation 'org.springframework.boot:spring-boot-docker-compose'

	// spring web problem
	implementation "org.zalando:problem-spring-web-starter:${springWebProblemVersion}"

	// mysql
	implementation "com.mysql:mysql-connector-j:${mysqlDriverVersion}"

	// p6spy-logging
	implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:${p6spyVersion}"

	// openapi
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocOpenApiVersion}"

	// jdk8 time module
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jsr310Version}"

	// faker
	implementation "com.github.javafaker:javafaker:${javaFakerVersion}"

	// aws s3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.643'


	implementation project(":travel-server-core")

}
